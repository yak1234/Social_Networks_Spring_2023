{
  "hash": "63431d3fa1dc6a834b000c4c04d4f11f",
  "result": {
    "markdown": "---\ntitle: \"Week 4 Challenge Instructions\"\nauthor: \"Yakub Rabiuhteen\"\ndescription: \"Centrality of a Network\"\ndate: \"03/06/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_4\n  - instructions\n  # - railroads\n  # - faostat\n  # - wildbirds\n---\n\n## Challenge Overview\n\nDescribe the many measures of centrality of at least one network of your choice.\n\nI have decided to use the Florentine Dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n\nThe following objects are masked from 'package:lubridate':\n\n    %--%, union\n\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n\nThe following object is masked from 'package:tidyr':\n\n    crossing\n\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n\n```{.r .cell-code}\nlibrary(sna)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: statnet.common\n\nAttaching package: 'statnet.common'\n\nThe following objects are masked from 'package:base':\n\n    attr, order\n\nLoading required package: network\n\n'network' 1.18.1 (2023-01-24), part of the Statnet Project\n* 'news(package=\"network\")' for changes since last version\n* 'citation(\"network\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n\n\nAttaching package: 'network'\n\nThe following objects are masked from 'package:igraph':\n\n    %c%, %s%, add.edges, add.vertices, delete.edges, delete.vertices,\n    get.edge.attribute, get.edges, get.vertex.attribute, is.bipartite,\n    is.directed, list.edge.attributes, list.vertex.attributes,\n    set.edge.attribute, set.vertex.attribute\n\nsna: Tools for Social Network Analysis\nVersion 2.7-1 created on 2023-01-24.\ncopyright (c) 2005, Carter T. Butts, University of California-Irvine\n For citation information, type citation(\"sna\").\n Type help(package=\"sna\") to get started.\n\n\nAttaching package: 'sna'\n\nThe following objects are masked from 'package:igraph':\n\n    betweenness, bonpow, closeness, components, degree, dyad.census,\n    evcent, hierarchy, is.connected, neighborhood, triad.census\n```\n:::\n\n```{.r .cell-code}\nlibrary(network)\nlibrary(statnet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tergm\nLoading required package: ergm\n\n'ergm' 4.4.0 (2023-01-26), part of the Statnet Project\n* 'news(package=\"ergm\")' for changes since last version\n* 'citation(\"ergm\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n\n'ergm' 4 is a major update that introduces some backwards-incompatible\nchanges. Please type 'news(package=\"ergm\")' for a list of major\nchanges.\n\n\nAttaching package: 'ergm'\n\nThe following object is masked from 'package:statnet.common':\n\n    snctrl\n\nLoading required package: networkDynamic\n\n'networkDynamic' 0.11.3 (2023-02-15), part of the Statnet Project\n* 'news(package=\"networkDynamic\")' for changes since last version\n* 'citation(\"networkDynamic\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n\nRegistered S3 method overwritten by 'tergm':\n  method                   from\n  simulate_formula.network ergm\n\n'tergm' 4.1.1 (2022-11-07), part of the Statnet Project\n* 'news(package=\"tergm\")' for changes since last version\n* 'citation(\"tergm\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n\n\nAttaching package: 'tergm'\n\nThe following object is masked from 'package:ergm':\n\n    snctrl\n\nThe following object is masked from 'package:statnet.common':\n\n    snctrl\n\nLoading required package: ergm.count\n\n'ergm.count' 4.1.1 (2022-05-24), part of the Statnet Project\n* 'news(package=\"ergm.count\")' for changes since last version\n* 'citation(\"ergm.count\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n\nLoading required package: tsna\n\n'statnet' 2019.6 (2019-06-13), part of the Statnet Project\n* 'news(package=\"statnet\")' for changes since last version\n* 'citation(\"statnet\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(flo)\n```\n:::\n\n\n## Describe the Network Data\n\nIf you have not done it before, always start by evaluating the basic structure of the network (number of edges and vertices, dyad and triad census, etc.). Create a data frame `nodes` with the corresponding local attributes such as degree or local transitivity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflo_net <- network(flo, directed = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork(flo_net, directed = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Network attributes:\n  vertices = 16 \n  directed = FALSE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 20 \n    missing edges= 0 \n    non-missing edges= 20 \n\n Vertex attribute names: \n    vertex.names \n\nNo edge attributes\n```\n:::\n:::\n\n\n Network attributes:\n  vertices = 16 \n  directed = FALSE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 20 \n    missing edges= 0 \n    non-missing edges= 20 \n\nThere are 16 actors and 20 ties in the network.\n\nIt is not directed or a bipariate network.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvertex_names <- network.vertex.names(flo_net)\n```\n:::\n\n\n [1] \"Acciaiuoli\"   \"Albizzi\"      \"Barbadori\"    \"Bischeri\"     \"Castellani\"   \"Ginori\"       \"Guadagni\"     \"Lamberteschi\" \"Medici\"      \n[10] \"Pazzi\"        \"Peruzzi\"      \"Pucci\"        \"Ridolfi\"      \"Salviati\"     \"Strozzi\"      \"Tornabuoni\"  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork.vertex.names(flo_net) <- network.vertex.names(flo_net)\n```\n:::\n\n\n\n\nuse igraph to plot the network\n\n::: {.cell}\n\n```{.r .cell-code}\nflorentine_igraph <- graph_from_data_frame(flo_net, directed = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(florentine_igraph, vertex.label = vertex_names)\n```\n\n::: {.cell-output-display}\n![](Week4_Challenge_Yakub_Rabiutheen_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Centrality\n\nCompute at least one measure of centrality for each node, adding them as attributes to `nodes` in the form of extra columns: eigencentrality, betweenness, closeness, etc. Compute the distribution of at least one of those measures. What do we learn from comparing these measures of centrality with an equivalent random network (i.e. with the same number of edges and vertices)?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute Indegree Measures\ntotdegree <- igraph::degree(florentine_igraph)\nindegree <- igraph::degree(florentine_igraph, mode = \"in\", loops = FALSE)\noutdegree <- igraph::degree(florentine_igraph, mode = \"out\", loops = FALSE)\nglobtrans <- igraph::transitivity(florentine_igraph, type = \"global\")\navgtrans <- igraph::transitivity(florentine_igraph, type = \"average\")\n#Compute Centerality Measures\neigencentrality <- igraph::eigen_centrality(florentine_igraph)$vector\nbetweenness <- igraph::betweenness(florentine_igraph)\ncloseness <- igraph::closeness(florentine_igraph)\n#Add Centerality Atribbutes to the nodes\nflorentine_igraph_nodes$totdegree <- totdegree\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$totdegree <- totdegree: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$indegree <- indegree\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$indegree <- indegree: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$outdegree <- outdegree\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$outdegree <- outdegree: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$globtrans <- globtrans\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$globtrans <- globtrans: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$avgtrans <- avgtrans\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$avgtrans <- avgtrans: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$eigencentrality <- eigencentrality\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$eigencentrality <- eigencentrality: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$betweenness <- betweenness\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$betweenness <- betweenness: object 'florentine_igraph_nodes' not found\n```\n:::\n\n```{.r .cell-code}\nflorentine_igraph_nodes$closeness <- closeness\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in florentine_igraph_nodes$closeness <- closeness: object 'florentine_igraph_nodes' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflorentine_igraph_nodes\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'florentine_igraph_nodes' not found\n```\n:::\n:::\n\n\nHere are some observations:\n- \"Medici\" stands out as the most central node in the network with the highest scores across multiple centrality measures:\n  - Total degree: 6\n  - Indegree: 6\n  - Outdegree: 6\n  - Global transitivity: 0.1914894\n  - Average transitivity: 0.2181818\n  - Eigencentrality: 1.0000000\n  - Betweenness: 47.500000\n  - Closeness: 0.04000000\n\n- Nodes \"Ginori,\" \"Lamberteschi,\" \"Acciaiuoli,\" and \"Pazzi\" exhibit relatively lower centrality scores compared to others in the network:\n  - Total degree: 1\n  - Indegree: 1\n  - Outdegree: 1\n  - Global transitivity: 0.1914894\n  - Average transitivity: 0.2181818\n  - Eigencentrality: 0.1741141\n  - Betweenness: 0.000000\n  - Closeness: 0.02380952\n\n- Nodes \"Guadagni,\" \"Strozzi,\" \"Ridolfi,\" and \"Albizzi\" show higher centrality scores, indicating their significant roles within the network:\n  - Total degree: 4\n  - Indegree: 4\n  - Outdegree: 4\n  - Global transitivity: 0.1914894\n  - Average transitivity: 0.2181818\n  - Eigencentrality: 0.6718805 (Guadagni), 0.8272688 (Strozzi), 0.7937398 (Ridolfi), 0.5669336 (Albizzi)\n  - Betweenness: 23.166667 (Guadagni), 9.333333 (Strozzi), 10.333333 (Ridolfi), 19.333333 (Albizzi)\n  - Closeness: 0.03333333 (Guadagni), 0.03125000 (Strozzi), 0.03571429 (Ridolfi), 0.03448276 (Albizzi)\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "Week4_Challenge_Yakub_Rabiutheen_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}